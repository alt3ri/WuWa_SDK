#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TsHotFixActionHandle

#include "Basic.hpp"

#include "TsHotFixActionHandle_classes.hpp"
#include "TsHotFixActionHandle_parameters.hpp"


namespace SDK
{

// Function TsHotFixActionHandle.TsHotFixActionHandle_C.OnPressActionCallback__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPress                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           Param_ActionName                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UTsHotFixActionHandle_C::OnPressActionCallback__DelegateSignature(bool IsPress, const class FString& Param_ActionName, const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsHotFixActionHandle_C", "OnPressActionCallback__DelegateSignature");

	Params::TsHotFixActionHandle_C_OnPressActionCallback__DelegateSignature Parms{};

	Parms.IsPress = IsPress;
	Parms.Param_ActionName = std::move(Param_ActionName);
	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TsHotFixActionHandle.TsHotFixActionHandle_C.OnTouchActionCallback__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPress                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// ETouchIndex                             Param_TouchIndex                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Param_TouchPosition                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTsHotFixActionHandle_C::OnTouchActionCallback__DelegateSignature(bool IsPress, ETouchIndex Param_TouchIndex, const struct FVector& Param_TouchPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsHotFixActionHandle_C", "OnTouchActionCallback__DelegateSignature");

	Params::TsHotFixActionHandle_C_OnTouchActionCallback__DelegateSignature Parms{};

	Parms.IsPress = IsPress;
	Parms.Param_TouchIndex = Param_TouchIndex;
	Parms.Param_TouchPosition = std::move(Param_TouchPosition);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TsHotFixActionHandle.TsHotFixActionHandle_C.OnTouchMovedActionCallback__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// ETouchIndex                             Param_TouchIndex                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Param_TouchPosition                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTsHotFixActionHandle_C::OnTouchMovedActionCallback__DelegateSignature(ETouchIndex Param_TouchIndex, const struct FVector& Param_TouchPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsHotFixActionHandle_C", "OnTouchMovedActionCallback__DelegateSignature");

	Params::TsHotFixActionHandle_C_OnTouchMovedActionCallback__DelegateSignature Parms{};

	Parms.Param_TouchIndex = Param_TouchIndex;
	Parms.Param_TouchPosition = std::move(Param_TouchPosition);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TsHotFixActionHandle.TsHotFixActionHandle_C.OnAxisCallback__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Param_AxisName                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UTsHotFixActionHandle_C::OnAxisCallback__DelegateSignature(float Value, const class FString& Param_AxisName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsHotFixActionHandle_C", "OnAxisCallback__DelegateSignature");

	Params::TsHotFixActionHandle_C_OnAxisCallback__DelegateSignature Parms{};

	Parms.Value = Value;
	Parms.Param_AxisName = std::move(Param_AxisName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TsHotFixActionHandle.TsHotFixActionHandle_C.OnAnyKeyPressCallback__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UTsHotFixActionHandle_C::OnAnyKeyPressCallback__DelegateSignature(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsHotFixActionHandle_C", "OnAnyKeyPressCallback__DelegateSignature");

	Params::TsHotFixActionHandle_C_OnAnyKeyPressCallback__DelegateSignature Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TsHotFixActionHandle.TsHotFixActionHandle_C.OnPressAction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UTsHotFixActionHandle_C::OnPressAction(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsHotFixActionHandle_C", "OnPressAction");

	Params::TsHotFixActionHandle_C_OnPressAction Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TsHotFixActionHandle.TsHotFixActionHandle_C.OnReleaseAction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UTsHotFixActionHandle_C::OnReleaseAction(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsHotFixActionHandle_C", "OnReleaseAction");

	Params::TsHotFixActionHandle_C_OnReleaseAction Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TsHotFixActionHandle.TsHotFixActionHandle_C.AddPressBinding
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_ActionName                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class ABasePlayerController*            Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTsHotFixActionHandle_C::AddPressBinding(const class FString& Param_ActionName, class ABasePlayerController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsHotFixActionHandle_C", "AddPressBinding");

	Params::TsHotFixActionHandle_C_AddPressBinding Parms{};

	Parms.Param_ActionName = std::move(Param_ActionName);
	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TsHotFixActionHandle.TsHotFixActionHandle_C.AddReleaseBinding
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_ActionName                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class ABasePlayerController*            Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTsHotFixActionHandle_C::AddReleaseBinding(const class FString& Param_ActionName, class ABasePlayerController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsHotFixActionHandle_C", "AddReleaseBinding");

	Params::TsHotFixActionHandle_C_AddReleaseBinding Parms{};

	Parms.Param_ActionName = std::move(Param_ActionName);
	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TsHotFixActionHandle.TsHotFixActionHandle_C.AddTouchPressBinding
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABasePlayerController*            Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTsHotFixActionHandle_C::AddTouchPressBinding(class ABasePlayerController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsHotFixActionHandle_C", "AddTouchPressBinding");

	Params::TsHotFixActionHandle_C_AddTouchPressBinding Parms{};

	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TsHotFixActionHandle.TsHotFixActionHandle_C.AddTouchReleaseBinding
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABasePlayerController*            Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTsHotFixActionHandle_C::AddTouchReleaseBinding(class ABasePlayerController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsHotFixActionHandle_C", "AddTouchReleaseBinding");

	Params::TsHotFixActionHandle_C_AddTouchReleaseBinding Parms{};

	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TsHotFixActionHandle.TsHotFixActionHandle_C.OnTouchPressAction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ETouchIndex                             Param_TouchIndex                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Position                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTsHotFixActionHandle_C::OnTouchPressAction(ETouchIndex Param_TouchIndex, const struct FVector& Position)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsHotFixActionHandle_C", "OnTouchPressAction");

	Params::TsHotFixActionHandle_C_OnTouchPressAction Parms{};

	Parms.Param_TouchIndex = Param_TouchIndex;
	Parms.Position = std::move(Position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TsHotFixActionHandle.TsHotFixActionHandle_C.OnTouchReleaseAction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ETouchIndex                             Param_TouchIndex                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Position                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTsHotFixActionHandle_C::OnTouchReleaseAction(ETouchIndex Param_TouchIndex, const struct FVector& Position)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsHotFixActionHandle_C", "OnTouchReleaseAction");

	Params::TsHotFixActionHandle_C_OnTouchReleaseAction Parms{};

	Parms.Param_TouchIndex = Param_TouchIndex;
	Parms.Position = std::move(Position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TsHotFixActionHandle.TsHotFixActionHandle_C.ClearActionBinding
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABasePlayerController*            Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTsHotFixActionHandle_C::ClearActionBinding(class ABasePlayerController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsHotFixActionHandle_C", "ClearActionBinding");

	Params::TsHotFixActionHandle_C_ClearActionBinding Parms{};

	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TsHotFixActionHandle.TsHotFixActionHandle_C.OnTouchMoveAction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ETouchIndex                             Touchindex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Position                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTsHotFixActionHandle_C::OnTouchMoveAction(ETouchIndex Touchindex, const struct FVector& Position)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsHotFixActionHandle_C", "OnTouchMoveAction");

	Params::TsHotFixActionHandle_C_OnTouchMoveAction Parms{};

	Parms.Touchindex = Touchindex;
	Parms.Position = std::move(Position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TsHotFixActionHandle.TsHotFixActionHandle_C.AddTouchMoveBinding
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABasePlayerController*            Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTsHotFixActionHandle_C::AddTouchMoveBinding(class ABasePlayerController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsHotFixActionHandle_C", "AddTouchMoveBinding");

	Params::TsHotFixActionHandle_C_AddTouchMoveBinding Parms{};

	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TsHotFixActionHandle.TsHotFixActionHandle_C.AddAxisBinding
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_AxisName                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class ABasePlayerController*            Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTsHotFixActionHandle_C::AddAxisBinding(const class FString& Param_AxisName, class ABasePlayerController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsHotFixActionHandle_C", "AddAxisBinding");

	Params::TsHotFixActionHandle_C_AddAxisBinding Parms{};

	Parms.Param_AxisName = std::move(Param_AxisName);
	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TsHotFixActionHandle.TsHotFixActionHandle_C.OnAxisInput
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTsHotFixActionHandle_C::OnAxisInput(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsHotFixActionHandle_C", "OnAxisInput");

	Params::TsHotFixActionHandle_C_OnAxisInput Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TsHotFixActionHandle.TsHotFixActionHandle_C.ClearAxisBinding
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABasePlayerController*            Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTsHotFixActionHandle_C::ClearAxisBinding(class ABasePlayerController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsHotFixActionHandle_C", "ClearAxisBinding");

	Params::TsHotFixActionHandle_C_ClearAxisBinding Parms{};

	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TsHotFixActionHandle.TsHotFixActionHandle_C.AddAnyKeyPress
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABasePlayerController*            Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FInputChord                      Chord                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UTsHotFixActionHandle_C::AddAnyKeyPress(class ABasePlayerController* Controller, const struct FInputChord& Chord)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsHotFixActionHandle_C", "AddAnyKeyPress");

	Params::TsHotFixActionHandle_C_AddAnyKeyPress Parms{};

	Parms.Controller = Controller;
	Parms.Chord = std::move(Chord);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TsHotFixActionHandle.TsHotFixActionHandle_C.ClearKeyBinding
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABasePlayerController*            Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTsHotFixActionHandle_C::ClearKeyBinding(class ABasePlayerController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsHotFixActionHandle_C", "ClearKeyBinding");

	Params::TsHotFixActionHandle_C_ClearKeyBinding Parms{};

	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TsHotFixActionHandle.TsHotFixActionHandle_C.OnAnyKeyPressAction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UTsHotFixActionHandle_C::OnAnyKeyPressAction(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsHotFixActionHandle_C", "OnAnyKeyPressAction");

	Params::TsHotFixActionHandle_C_OnAnyKeyPressAction Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}

}

