#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Lau_Lensflare

#include "Basic.hpp"

#include "KuroCurve_structs.hpp"
#include "Engine_structs.hpp"
#include "KuroRenderingRuntimeBPPlugin_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Lau_Lensflare.BP_Lau_Lensflare_C
// 0x0258 (0x0518 - 0x02C0)
class ABP_Lau_Lensflare_C final : public AKuroEditorTickActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Glare;                                             // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Halo;                                              // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FKuroCurveLinearColor                  LensflareColorTintCurve;                           // 0x02E0(0x0220)(Edit, BlueprintVisible)
	float                                         No_Sample_Opacity;                                 // 0x0500(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_504[0x4];                                      // 0x0504(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               DynMatHalo;                                        // 0x0508(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DynMatGlare;                                       // 0x0510(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Lau_Lensflare(int32 EntryPoint);
	void EditorTick(float DeltaSeconds);
	void ReceiveTick(float DeltaSeconds);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Lau_Lensflare_C">();
	}
	static class ABP_Lau_Lensflare_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Lau_Lensflare_C>();
	}
};
static_assert(alignof(ABP_Lau_Lensflare_C) == 0x000008, "Wrong alignment on ABP_Lau_Lensflare_C");
static_assert(sizeof(ABP_Lau_Lensflare_C) == 0x000518, "Wrong size on ABP_Lau_Lensflare_C");
static_assert(offsetof(ABP_Lau_Lensflare_C, UberGraphFrame) == 0x0002C0, "Member 'ABP_Lau_Lensflare_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Lau_Lensflare_C, Glare) == 0x0002C8, "Member 'ABP_Lau_Lensflare_C::Glare' has a wrong offset!");
static_assert(offsetof(ABP_Lau_Lensflare_C, Halo) == 0x0002D0, "Member 'ABP_Lau_Lensflare_C::Halo' has a wrong offset!");
static_assert(offsetof(ABP_Lau_Lensflare_C, DefaultSceneRoot) == 0x0002D8, "Member 'ABP_Lau_Lensflare_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Lau_Lensflare_C, LensflareColorTintCurve) == 0x0002E0, "Member 'ABP_Lau_Lensflare_C::LensflareColorTintCurve' has a wrong offset!");
static_assert(offsetof(ABP_Lau_Lensflare_C, No_Sample_Opacity) == 0x000500, "Member 'ABP_Lau_Lensflare_C::No_Sample_Opacity' has a wrong offset!");
static_assert(offsetof(ABP_Lau_Lensflare_C, DynMatHalo) == 0x000508, "Member 'ABP_Lau_Lensflare_C::DynMatHalo' has a wrong offset!");
static_assert(offsetof(ABP_Lau_Lensflare_C, DynMatGlare) == 0x000510, "Member 'ABP_Lau_Lensflare_C::DynMatGlare' has a wrong offset!");

}

