#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlotBlueprintFunctionLibrary

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "SpineThingsInfo_structs.hpp"


namespace SDK::Params
{

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.IsInSequence
// 0x0010 (0x0010 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_IsInSequence final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_IsInSequence) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_IsInSequence");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_IsInSequence) == 0x000010, "Wrong size on PlotBlueprintFunctionLibrary_C_IsInSequence");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_IsInSequence, __WorldContext) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_IsInSequence::__WorldContext' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_IsInSequence, ReturnValue) == 0x000008, "Member 'PlotBlueprintFunctionLibrary_C_IsInSequence::ReturnValue' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.SkipCurrentSequence
// 0x0008 (0x0008 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_SkipCurrentSequence final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_SkipCurrentSequence) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_SkipCurrentSequence");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_SkipCurrentSequence) == 0x000008, "Wrong size on PlotBlueprintFunctionLibrary_C_SkipCurrentSequence");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_SkipCurrentSequence, __WorldContext) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_SkipCurrentSequence::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.PauseSequence
// 0x0008 (0x0008 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_PauseSequence final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_PauseSequence) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_PauseSequence");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_PauseSequence) == 0x000008, "Wrong size on PlotBlueprintFunctionLibrary_C_PauseSequence");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_PauseSequence, __WorldContext) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_PauseSequence::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.ResumeSequence
// 0x0008 (0x0008 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_ResumeSequence final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_ResumeSequence) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_ResumeSequence");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_ResumeSequence) == 0x000008, "Wrong size on PlotBlueprintFunctionLibrary_C_ResumeSequence");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_ResumeSequence, __WorldContext) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_ResumeSequence::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.UseEnterMoveMode
// 0x0010 (0x0010 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_UseEnterMoveMode final
{
public:
	class AActor*                                 InCharacter1;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_UseEnterMoveMode) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_UseEnterMoveMode");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_UseEnterMoveMode) == 0x000010, "Wrong size on PlotBlueprintFunctionLibrary_C_UseEnterMoveMode");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_UseEnterMoveMode, InCharacter1) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_UseEnterMoveMode::InCharacter1' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_UseEnterMoveMode, __WorldContext) == 0x000008, "Member 'PlotBlueprintFunctionLibrary_C_UseEnterMoveMode::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.StartPlotTs
// 0x0018 (0x0018 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_StartPlotTs final
{
public:
	class FString                                 InRes;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_StartPlotTs) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_StartPlotTs");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_StartPlotTs) == 0x000018, "Wrong size on PlotBlueprintFunctionLibrary_C_StartPlotTs");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_StartPlotTs, InRes) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_StartPlotTs::InRes' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_StartPlotTs, __WorldContext) == 0x000010, "Member 'PlotBlueprintFunctionLibrary_C_StartPlotTs::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.IsInPerformingPlot
// 0x0010 (0x0010 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_IsInPerformingPlot final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_IsInPerformingPlot) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_IsInPerformingPlot");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_IsInPerformingPlot) == 0x000010, "Wrong size on PlotBlueprintFunctionLibrary_C_IsInPerformingPlot");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_IsInPerformingPlot, __WorldContext) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_IsInPerformingPlot::__WorldContext' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_IsInPerformingPlot, ReturnValue) == 0x000008, "Member 'PlotBlueprintFunctionLibrary_C_IsInPerformingPlot::ReturnValue' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.TriggerBlackSequence
// 0x0008 (0x0008 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_TriggerBlackSequence final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_TriggerBlackSequence) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_TriggerBlackSequence");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_TriggerBlackSequence) == 0x000008, "Wrong size on PlotBlueprintFunctionLibrary_C_TriggerBlackSequence");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_TriggerBlackSequence, __WorldContext) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_TriggerBlackSequence::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.ChangePlotWeather
// 0x0018 (0x0018 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_ChangePlotWeather final
{
public:
	int32                                         WeatherId;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInherit;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TweenTime;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_ChangePlotWeather) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_ChangePlotWeather");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_ChangePlotWeather) == 0x000018, "Wrong size on PlotBlueprintFunctionLibrary_C_ChangePlotWeather");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_ChangePlotWeather, WeatherId) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_ChangePlotWeather::WeatherId' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_ChangePlotWeather, IsInherit) == 0x000004, "Member 'PlotBlueprintFunctionLibrary_C_ChangePlotWeather::IsInherit' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_ChangePlotWeather, TweenTime) == 0x000008, "Member 'PlotBlueprintFunctionLibrary_C_ChangePlotWeather::TweenTime' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_ChangePlotWeather, __WorldContext) == 0x000010, "Member 'PlotBlueprintFunctionLibrary_C_ChangePlotWeather::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.ShowNameInput
// 0x0008 (0x0008 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_ShowNameInput final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_ShowNameInput) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_ShowNameInput");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_ShowNameInput) == 0x000008, "Wrong size on PlotBlueprintFunctionLibrary_C_ShowNameInput");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_ShowNameInput, __WorldContext) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_ShowNameInput::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.AddBurstEyeRenderingMaterial
// 0x0010 (0x0010 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_AddBurstEyeRenderingMaterial final
{
public:
	bool                                          IsBoy;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_AddBurstEyeRenderingMaterial) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_AddBurstEyeRenderingMaterial");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_AddBurstEyeRenderingMaterial) == 0x000010, "Wrong size on PlotBlueprintFunctionLibrary_C_AddBurstEyeRenderingMaterial");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_AddBurstEyeRenderingMaterial, IsBoy) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_AddBurstEyeRenderingMaterial::IsBoy' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_AddBurstEyeRenderingMaterial, __WorldContext) == 0x000008, "Member 'PlotBlueprintFunctionLibrary_C_AddBurstEyeRenderingMaterial::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.RemoveBurstEyeRenderingMaterial
// 0x0010 (0x0010 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_RemoveBurstEyeRenderingMaterial final
{
public:
	bool                                          IsBoy;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_RemoveBurstEyeRenderingMaterial) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_RemoveBurstEyeRenderingMaterial");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_RemoveBurstEyeRenderingMaterial) == 0x000010, "Wrong size on PlotBlueprintFunctionLibrary_C_RemoveBurstEyeRenderingMaterial");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_RemoveBurstEyeRenderingMaterial, IsBoy) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_RemoveBurstEyeRenderingMaterial::IsBoy' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_RemoveBurstEyeRenderingMaterial, __WorldContext) == 0x000008, "Member 'PlotBlueprintFunctionLibrary_C_RemoveBurstEyeRenderingMaterial::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.ChangePlotTimeOfDay
// 0x0018 (0x0018 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_ChangePlotTimeOfDay final
{
public:
	bool                                          IsInherit;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         StartSecond;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EndSecond;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TweenFrame;                                        // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_ChangePlotTimeOfDay) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_ChangePlotTimeOfDay");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_ChangePlotTimeOfDay) == 0x000018, "Wrong size on PlotBlueprintFunctionLibrary_C_ChangePlotTimeOfDay");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_ChangePlotTimeOfDay, IsInherit) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_ChangePlotTimeOfDay::IsInherit' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_ChangePlotTimeOfDay, StartSecond) == 0x000004, "Member 'PlotBlueprintFunctionLibrary_C_ChangePlotTimeOfDay::StartSecond' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_ChangePlotTimeOfDay, EndSecond) == 0x000008, "Member 'PlotBlueprintFunctionLibrary_C_ChangePlotTimeOfDay::EndSecond' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_ChangePlotTimeOfDay, TweenFrame) == 0x00000C, "Member 'PlotBlueprintFunctionLibrary_C_ChangePlotTimeOfDay::TweenFrame' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_ChangePlotTimeOfDay, __WorldContext) == 0x000010, "Member 'PlotBlueprintFunctionLibrary_C_ChangePlotTimeOfDay::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.ExecuteSequenceEvents
// 0x0018 (0x0018 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_ExecuteSequenceEvents final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_ExecuteSequenceEvents) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_ExecuteSequenceEvents");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_ExecuteSequenceEvents) == 0x000018, "Wrong size on PlotBlueprintFunctionLibrary_C_ExecuteSequenceEvents");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_ExecuteSequenceEvents, Key) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_ExecuteSequenceEvents::Key' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_ExecuteSequenceEvents, __WorldContext) == 0x000010, "Member 'PlotBlueprintFunctionLibrary_C_ExecuteSequenceEvents::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.TriggerCutChange
// 0x0008 (0x0008 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_TriggerCutChange final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_TriggerCutChange) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_TriggerCutChange");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_TriggerCutChange) == 0x000008, "Wrong size on PlotBlueprintFunctionLibrary_C_TriggerCutChange");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_TriggerCutChange, __WorldContext) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_TriggerCutChange::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.OpenChapterUi
// 0x0010 (0x0010 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_OpenChapterUi final
{
public:
	int32                                         ChapterState;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         ChapterId;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_OpenChapterUi) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_OpenChapterUi");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_OpenChapterUi) == 0x000010, "Wrong size on PlotBlueprintFunctionLibrary_C_OpenChapterUi");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_OpenChapterUi, ChapterState) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_OpenChapterUi::ChapterState' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_OpenChapterUi, ChapterId) == 0x000004, "Member 'PlotBlueprintFunctionLibrary_C_OpenChapterUi::ChapterId' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_OpenChapterUi, __WorldContext) == 0x000008, "Member 'PlotBlueprintFunctionLibrary_C_OpenChapterUi::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.ShowLogo
// 0x0010 (0x0010 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_ShowLogo final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_ShowLogo) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_ShowLogo");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_ShowLogo) == 0x000010, "Wrong size on PlotBlueprintFunctionLibrary_C_ShowLogo");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_ShowLogo, Time) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_ShowLogo::Time' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_ShowLogo, __WorldContext) == 0x000008, "Member 'PlotBlueprintFunctionLibrary_C_ShowLogo::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.CloseUiView
// 0x0008 (0x0008 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_CloseUiView final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_CloseUiView) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_CloseUiView");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_CloseUiView) == 0x000008, "Wrong size on PlotBlueprintFunctionLibrary_C_CloseUiView");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_CloseUiView, __WorldContext) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_CloseUiView::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.OpenUiView
// 0x0050 (0x0050 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_OpenUiView final
{
public:
	class FString                                 MaleAssetName1;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 FemaleAssetName1;                                  // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 MaleSpineName1;                                    // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 FemaleSpineName1;                                  // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          NeedLoop;                                          // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_OpenUiView) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_OpenUiView");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_OpenUiView) == 0x000050, "Wrong size on PlotBlueprintFunctionLibrary_C_OpenUiView");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_OpenUiView, MaleAssetName1) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_OpenUiView::MaleAssetName1' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_OpenUiView, FemaleAssetName1) == 0x000010, "Member 'PlotBlueprintFunctionLibrary_C_OpenUiView::FemaleAssetName1' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_OpenUiView, MaleSpineName1) == 0x000020, "Member 'PlotBlueprintFunctionLibrary_C_OpenUiView::MaleSpineName1' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_OpenUiView, FemaleSpineName1) == 0x000030, "Member 'PlotBlueprintFunctionLibrary_C_OpenUiView::FemaleSpineName1' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_OpenUiView, NeedLoop) == 0x000040, "Member 'PlotBlueprintFunctionLibrary_C_OpenUiView::NeedLoop' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_OpenUiView, __WorldContext) == 0x000048, "Member 'PlotBlueprintFunctionLibrary_C_OpenUiView::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.PlayUiLevelSequence
// 0x0018 (0x0018 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_PlayUiLevelSequence final
{
public:
	class FString                                 SeqName;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_PlayUiLevelSequence) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_PlayUiLevelSequence");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_PlayUiLevelSequence) == 0x000018, "Wrong size on PlotBlueprintFunctionLibrary_C_PlayUiLevelSequence");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_PlayUiLevelSequence, SeqName) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_PlayUiLevelSequence::SeqName' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_PlayUiLevelSequence, __WorldContext) == 0x000010, "Member 'PlotBlueprintFunctionLibrary_C_PlayUiLevelSequence::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.ExecuteEntitySequenceEvents
// 0x0020 (0x0020 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_ExecuteEntitySequenceEvents final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         EntityId;                                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_ExecuteEntitySequenceEvents) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_ExecuteEntitySequenceEvents");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_ExecuteEntitySequenceEvents) == 0x000020, "Wrong size on PlotBlueprintFunctionLibrary_C_ExecuteEntitySequenceEvents");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_ExecuteEntitySequenceEvents, Key) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_ExecuteEntitySequenceEvents::Key' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_ExecuteEntitySequenceEvents, EntityId) == 0x000010, "Member 'PlotBlueprintFunctionLibrary_C_ExecuteEntitySequenceEvents::EntityId' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_ExecuteEntitySequenceEvents, __WorldContext) == 0x000018, "Member 'PlotBlueprintFunctionLibrary_C_ExecuteEntitySequenceEvents::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.PlaySpineAnimForGender
// 0x0030 (0x0030 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGender final
{
public:
	class FString                                 MaleSpineName;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 FemaleSpineName;                                   // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          NeedLoop;                                          // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGender) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGender");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGender) == 0x000030, "Wrong size on PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGender");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGender, MaleSpineName) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGender::MaleSpineName' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGender, FemaleSpineName) == 0x000010, "Member 'PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGender::FemaleSpineName' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGender, NeedLoop) == 0x000020, "Member 'PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGender::NeedLoop' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGender, __WorldContext) == 0x000028, "Member 'PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGender::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.PlaySpineAnim
// 0x0020 (0x0020 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_PlaySpineAnim final
{
public:
	class FString                                 SpineName1;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          NeedLoop;                                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_PlaySpineAnim) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_PlaySpineAnim");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_PlaySpineAnim) == 0x000020, "Wrong size on PlotBlueprintFunctionLibrary_C_PlaySpineAnim");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_PlaySpineAnim, SpineName1) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_PlaySpineAnim::SpineName1' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_PlaySpineAnim, NeedLoop) == 0x000010, "Member 'PlotBlueprintFunctionLibrary_C_PlaySpineAnim::NeedLoop' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_PlaySpineAnim, __WorldContext) == 0x000018, "Member 'PlotBlueprintFunctionLibrary_C_PlaySpineAnim::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.OpenUiViewInArray
// 0x0048 (0x0048 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_OpenUiViewInArray final
{
public:
	class FString                                 MaleAssetName1;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 FemaleAssetName1;                                  // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FSpineThingsInfo>               MaleSpineArray1;                                   // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FSpineThingsInfo>               FemaleSpineArray1;                                 // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_OpenUiViewInArray) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_OpenUiViewInArray");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_OpenUiViewInArray) == 0x000048, "Wrong size on PlotBlueprintFunctionLibrary_C_OpenUiViewInArray");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_OpenUiViewInArray, MaleAssetName1) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_OpenUiViewInArray::MaleAssetName1' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_OpenUiViewInArray, FemaleAssetName1) == 0x000010, "Member 'PlotBlueprintFunctionLibrary_C_OpenUiViewInArray::FemaleAssetName1' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_OpenUiViewInArray, MaleSpineArray1) == 0x000020, "Member 'PlotBlueprintFunctionLibrary_C_OpenUiViewInArray::MaleSpineArray1' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_OpenUiViewInArray, FemaleSpineArray1) == 0x000030, "Member 'PlotBlueprintFunctionLibrary_C_OpenUiViewInArray::FemaleSpineArray1' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_OpenUiViewInArray, __WorldContext) == 0x000040, "Member 'PlotBlueprintFunctionLibrary_C_OpenUiViewInArray::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.PlaySpineAnimForGenderInArray
// 0x0028 (0x0028 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGenderInArray final
{
public:
	TArray<struct FSpineThingsInfo>               MaleSpineArray1;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FSpineThingsInfo>               FemaleSpineArray1;                                 // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGenderInArray) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGenderInArray");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGenderInArray) == 0x000028, "Wrong size on PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGenderInArray");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGenderInArray, MaleSpineArray1) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGenderInArray::MaleSpineArray1' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGenderInArray, FemaleSpineArray1) == 0x000010, "Member 'PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGenderInArray::FemaleSpineArray1' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGenderInArray, __WorldContext) == 0x000020, "Member 'PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGenderInArray::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.CloseSpineAnim
// 0x0018 (0x0018 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_CloseSpineAnim final
{
public:
	class FString                                 SpineName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_CloseSpineAnim) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_CloseSpineAnim");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_CloseSpineAnim) == 0x000018, "Wrong size on PlotBlueprintFunctionLibrary_C_CloseSpineAnim");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_CloseSpineAnim, SpineName) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_CloseSpineAnim::SpineName' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_CloseSpineAnim, __WorldContext) == 0x000010, "Member 'PlotBlueprintFunctionLibrary_C_CloseSpineAnim::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.CloseSpineAnimInArray
// 0x0018 (0x0018 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_CloseSpineAnimInArray final
{
public:
	TArray<class FString>                         SpineArray;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_CloseSpineAnimInArray) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_CloseSpineAnimInArray");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_CloseSpineAnimInArray) == 0x000018, "Wrong size on PlotBlueprintFunctionLibrary_C_CloseSpineAnimInArray");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_CloseSpineAnimInArray, SpineArray) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_CloseSpineAnimInArray::SpineArray' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_CloseSpineAnimInArray, __WorldContext) == 0x000010, "Member 'PlotBlueprintFunctionLibrary_C_CloseSpineAnimInArray::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.AddInteractTagToInteractingGravityMachine
// 0x0008 (0x0008 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_AddInteractTagToInteractingGravityMachine final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_AddInteractTagToInteractingGravityMachine) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_AddInteractTagToInteractingGravityMachine");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_AddInteractTagToInteractingGravityMachine) == 0x000008, "Wrong size on PlotBlueprintFunctionLibrary_C_AddInteractTagToInteractingGravityMachine");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_AddInteractTagToInteractingGravityMachine, __WorldContext) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_AddInteractTagToInteractingGravityMachine::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.RemoveInteractTagFromInteractingGravityMachine
// 0x0008 (0x0008 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_RemoveInteractTagFromInteractingGravityMachine final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_RemoveInteractTagFromInteractingGravityMachine) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_RemoveInteractTagFromInteractingGravityMachine");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_RemoveInteractTagFromInteractingGravityMachine) == 0x000008, "Wrong size on PlotBlueprintFunctionLibrary_C_RemoveInteractTagFromInteractingGravityMachine");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_RemoveInteractTagFromInteractingGravityMachine, __WorldContext) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_RemoveInteractTagFromInteractingGravityMachine::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.TriggerTagToInteractingGravityMachine
// 0x0018 (0x0018 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_TriggerTagToInteractingGravityMachine final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_TriggerTagToInteractingGravityMachine) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_TriggerTagToInteractingGravityMachine");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_TriggerTagToInteractingGravityMachine) == 0x000018, "Wrong size on PlotBlueprintFunctionLibrary_C_TriggerTagToInteractingGravityMachine");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_TriggerTagToInteractingGravityMachine, Tag) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_TriggerTagToInteractingGravityMachine::Tag' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_TriggerTagToInteractingGravityMachine, __WorldContext) == 0x000010, "Member 'PlotBlueprintFunctionLibrary_C_TriggerTagToInteractingGravityMachine::__WorldContext' has a wrong offset!");

}

