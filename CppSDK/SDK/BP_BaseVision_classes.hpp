#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BaseVision

#include "Basic.hpp"

#include "TsBaseCharacter_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BaseVision.BP_BaseVision_C
// 0x0020 (0x0770 - 0x0750)
class ABP_BaseVision_C final : public ATsBaseCharacter_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_BaseVision_C;                    // 0x0750(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FVector                                ______;                                            // 0x0758(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                _______0;                                          // 0x0764(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_BaseVision(int32 EntryPoint);
	void _____0();
	void ____();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void ___apn(struct FSVisionData* _apn);
	void _____r(class ATsBaseCharacter_C** ___r);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BaseVision_C">();
	}
	static class ABP_BaseVision_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BaseVision_C>();
	}
};
static_assert(alignof(ABP_BaseVision_C) == 0x000010, "Wrong alignment on ABP_BaseVision_C");
static_assert(sizeof(ABP_BaseVision_C) == 0x000770, "Wrong size on ABP_BaseVision_C");
static_assert(offsetof(ABP_BaseVision_C, UberGraphFrame_BP_BaseVision_C) == 0x000750, "Member 'ABP_BaseVision_C::UberGraphFrame_BP_BaseVision_C' has a wrong offset!");
static_assert(offsetof(ABP_BaseVision_C, ______) == 0x000758, "Member 'ABP_BaseVision_C::______' has a wrong offset!");
static_assert(offsetof(ABP_BaseVision_C, _______0) == 0x000764, "Member 'ABP_BaseVision_C::_______0' has a wrong offset!");

}

