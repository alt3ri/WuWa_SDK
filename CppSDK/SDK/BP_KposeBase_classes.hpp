#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_KposeBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SKposeEffect_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_Enum_PlatformSize_structs.hpp"
#include "KuroRenderingRuntimeBPPlugin_structs.hpp"
#include "KuroRenderingRuntimeBPPlugin_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_KposeBase.BP_KposeBase_C
// 0x0160 (0x0420 - 0x02C0)
class ABP_KposeBase_C final : public AKuroEditorTickActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSKposeEffect>                  PermanentEffects;                                  // 0x02D0(0x0010)(Edit, BlueprintVisible)
	TArray<struct FSKposeEffect>                  EffectsOnEnd;                                      // 0x02E0(0x0010)(Edit, BlueprintVisible)
	TArray<struct FSKposeEffect>                  EffectsOnStart;                                    // 0x02F0(0x0010)(Edit, BlueprintVisible)
	TArray<struct FKuroRainMaterialFloatParameter> FloatParameterCurves;                              // 0x0300(0x0010)(Edit, BlueprintVisible)
	TArray<struct FKuroRainMaterialColorParameter> ColorParameterCurves;                              // 0x0310(0x0010)(Edit, BlueprintVisible)
	bool                                          IsInEditor;                                        // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_321[0x3];                                      // 0x0321(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaterialPlayTime;                                  // 0x0324(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CachedHandles;                                     // 0x0328(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance)
	TArray<class UMaterialInstanceDynamic*>       DynamicMaterials;                                  // 0x0338(0x0010)(Edit, BlueprintVisible)
	float                                         PassTime;                                          // 0x0348(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C[0x4];                                      // 0x034C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, float>                      TempFloatValue;                                    // 0x0350(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, struct FLinearColor>        TempColorValue;                                    // 0x03A0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         TimeNormalized;                                    // 0x03F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F4[0x4];                                      // 0x03F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            PlatformStaticMesh;                                // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBP_Enum_PlatformSize                         Size;                                              // 0x0400(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_401[0x7];                                      // 0x0401(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 MaterialPrefix1____9_;                             // 0x0408(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CameraArmLength;                                   // 0x0418(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_KposeBase(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void EditorInit();
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void StopEffects();
	void PlayEffect(TSoftObjectPtr<class UEffectModelBase> EffectData, class USkeletalMeshComponent* Component, class FName AttachSocket, const struct FTransform& Transform);
	void PlayKposeEffects(TArray<struct FSKposeEffect>& Data, float AutoScale);
	void PlayStart();
	void PlayEnd();
	void ChangePlatform();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_KposeBase_C">();
	}
	static class ABP_KposeBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_KposeBase_C>();
	}
};
static_assert(alignof(ABP_KposeBase_C) == 0x000008, "Wrong alignment on ABP_KposeBase_C");
static_assert(sizeof(ABP_KposeBase_C) == 0x000420, "Wrong size on ABP_KposeBase_C");
static_assert(offsetof(ABP_KposeBase_C, UberGraphFrame) == 0x0002C0, "Member 'ABP_KposeBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_KposeBase_C, DefaultSceneRoot) == 0x0002C8, "Member 'ABP_KposeBase_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_KposeBase_C, PermanentEffects) == 0x0002D0, "Member 'ABP_KposeBase_C::PermanentEffects' has a wrong offset!");
static_assert(offsetof(ABP_KposeBase_C, EffectsOnEnd) == 0x0002E0, "Member 'ABP_KposeBase_C::EffectsOnEnd' has a wrong offset!");
static_assert(offsetof(ABP_KposeBase_C, EffectsOnStart) == 0x0002F0, "Member 'ABP_KposeBase_C::EffectsOnStart' has a wrong offset!");
static_assert(offsetof(ABP_KposeBase_C, FloatParameterCurves) == 0x000300, "Member 'ABP_KposeBase_C::FloatParameterCurves' has a wrong offset!");
static_assert(offsetof(ABP_KposeBase_C, ColorParameterCurves) == 0x000310, "Member 'ABP_KposeBase_C::ColorParameterCurves' has a wrong offset!");
static_assert(offsetof(ABP_KposeBase_C, IsInEditor) == 0x000320, "Member 'ABP_KposeBase_C::IsInEditor' has a wrong offset!");
static_assert(offsetof(ABP_KposeBase_C, MaterialPlayTime) == 0x000324, "Member 'ABP_KposeBase_C::MaterialPlayTime' has a wrong offset!");
static_assert(offsetof(ABP_KposeBase_C, CachedHandles) == 0x000328, "Member 'ABP_KposeBase_C::CachedHandles' has a wrong offset!");
static_assert(offsetof(ABP_KposeBase_C, DynamicMaterials) == 0x000338, "Member 'ABP_KposeBase_C::DynamicMaterials' has a wrong offset!");
static_assert(offsetof(ABP_KposeBase_C, PassTime) == 0x000348, "Member 'ABP_KposeBase_C::PassTime' has a wrong offset!");
static_assert(offsetof(ABP_KposeBase_C, TempFloatValue) == 0x000350, "Member 'ABP_KposeBase_C::TempFloatValue' has a wrong offset!");
static_assert(offsetof(ABP_KposeBase_C, TempColorValue) == 0x0003A0, "Member 'ABP_KposeBase_C::TempColorValue' has a wrong offset!");
static_assert(offsetof(ABP_KposeBase_C, TimeNormalized) == 0x0003F0, "Member 'ABP_KposeBase_C::TimeNormalized' has a wrong offset!");
static_assert(offsetof(ABP_KposeBase_C, PlatformStaticMesh) == 0x0003F8, "Member 'ABP_KposeBase_C::PlatformStaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_KposeBase_C, Size) == 0x000400, "Member 'ABP_KposeBase_C::Size' has a wrong offset!");
static_assert(offsetof(ABP_KposeBase_C, MaterialPrefix1____9_) == 0x000408, "Member 'ABP_KposeBase_C::MaterialPrefix1____9_' has a wrong offset!");
static_assert(offsetof(ABP_KposeBase_C, CameraArmLength) == 0x000418, "Member 'ABP_KposeBase_C::CameraArmLength' has a wrong offset!");

}

