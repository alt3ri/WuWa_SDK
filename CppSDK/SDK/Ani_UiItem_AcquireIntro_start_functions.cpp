#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ani_UiItem_AcquireIntro_start

#include "Basic.hpp"

#include "Ani_UiItem_AcquireIntro_start_classes.hpp"
#include "Ani_UiItem_AcquireIntro_start_parameters.hpp"


namespace SDK
{

// Function Ani_UiItem_AcquireIntro_start.SequenceDirector_C.ExecuteUbergraph_SequenceDirector
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void Ani_UiItem_AcquireIntro_start::USequenceDirector_C::ExecuteUbergraph_SequenceDirector(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SequenceDirector_C", "ExecuteUbergraph_SequenceDirector");

	Params::SequenceDirector_C_ExecuteUbergraph_SequenceDirector Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Ani_UiItem_AcquireIntro_start.SequenceDirector_C.UiItem_AcquireCollect_Event_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AUIContainerActor*                UiItem_AcquireCollect                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           SequenceName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           EventName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void Ani_UiItem_AcquireIntro_start::USequenceDirector_C::UiItem_AcquireCollect_Event_0(class AUIContainerActor* UiItem_AcquireCollect, const class FString& SequenceName, const class FString& EventName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SequenceDirector_C", "UiItem_AcquireCollect_Event_0");

	Params::SequenceDirector_C_UiItem_AcquireCollect_Event_0 Parms{};

	Parms.UiItem_AcquireCollect = UiItem_AcquireCollect;
	Parms.SequenceName = std::move(SequenceName);
	Parms.EventName = std::move(EventName);

	UObject::ProcessEvent(Func, &Parms);
}

}

