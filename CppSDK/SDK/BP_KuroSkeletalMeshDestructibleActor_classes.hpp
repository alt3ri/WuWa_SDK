#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_KuroSkeletalMeshDestructibleActor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "KuroRenderingRuntimeBPPlugin_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_KuroSkeletalMeshDestructibleActor.BP_KuroSkeletalMeshDestructibleActor_C
// 0x0068 (0x0338 - 0x02D0)
class ABP_KuroSkeletalMeshDestructibleActor_C final : public AKuroDestructibleActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   ProxyMesh;                                         // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPoseableMeshComponent*                 PoseableMesh;                                      // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   DO_NOT_MODIFY_ME;                                  // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         ImpluseFactor;                                     // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageRadius;                                      // 0x02FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OriginOffset;                                      // 0x0300(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BaseForce;                                         // 0x030C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreBullet;                                      // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsDebug;                                           // 0x0311(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_312[0x2];                                      // 0x0312(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Impluse;                                           // 0x0314(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HurtOrigin;                                        // 0x0318(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCollisionProfileName                  CollisionProfileName;                              // 0x0324(0x000C)(Edit, BlueprintVisible, NoDestructor)
	int32                                         DestructibleIndex;                                 // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_KuroSkeletalMeshDestructibleActor(int32 EntryPoint);
	void CustomEvent_1();
	void PlayDestruction(const struct FVector& HurtDirection, const struct FVector& Param_HurtOrigin, float Param_Impluse, bool IsZeroImpluse);
	void ReceiveBeginPlay();
	void OnDestructibleInit();
	void UserConstructionScript();
	void ApplyDamage(const struct FVector& Param_HurtOrigin, const struct FVector& SpeedDirection, int32 Param_Index);
	void SetStaticMeshChunkListVisiblity(bool Visiblity);
	void Apply_Radius_Impluse_1(const struct FVector& Param_HurtOrigin, float Param_Impluse, float Attenuation);
	void SetStaticMeshChunkListPhysicsSimulation(bool EnablePhysicsSimulation);
	void UpdateProxyMesh();
	void PreviewFullDestructible();
	void ShowStaticMeshList();
	void HideStaticMeshList();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_KuroSkeletalMeshDestructibleActor_C">();
	}
	static class ABP_KuroSkeletalMeshDestructibleActor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_KuroSkeletalMeshDestructibleActor_C>();
	}
};
static_assert(alignof(ABP_KuroSkeletalMeshDestructibleActor_C) == 0x000008, "Wrong alignment on ABP_KuroSkeletalMeshDestructibleActor_C");
static_assert(sizeof(ABP_KuroSkeletalMeshDestructibleActor_C) == 0x000338, "Wrong size on ABP_KuroSkeletalMeshDestructibleActor_C");
static_assert(offsetof(ABP_KuroSkeletalMeshDestructibleActor_C, UberGraphFrame) == 0x0002D0, "Member 'ABP_KuroSkeletalMeshDestructibleActor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_KuroSkeletalMeshDestructibleActor_C, ProxyMesh) == 0x0002D8, "Member 'ABP_KuroSkeletalMeshDestructibleActor_C::ProxyMesh' has a wrong offset!");
static_assert(offsetof(ABP_KuroSkeletalMeshDestructibleActor_C, Scene) == 0x0002E0, "Member 'ABP_KuroSkeletalMeshDestructibleActor_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_KuroSkeletalMeshDestructibleActor_C, PoseableMesh) == 0x0002E8, "Member 'ABP_KuroSkeletalMeshDestructibleActor_C::PoseableMesh' has a wrong offset!");
static_assert(offsetof(ABP_KuroSkeletalMeshDestructibleActor_C, DO_NOT_MODIFY_ME) == 0x0002F0, "Member 'ABP_KuroSkeletalMeshDestructibleActor_C::DO_NOT_MODIFY_ME' has a wrong offset!");
static_assert(offsetof(ABP_KuroSkeletalMeshDestructibleActor_C, ImpluseFactor) == 0x0002F8, "Member 'ABP_KuroSkeletalMeshDestructibleActor_C::ImpluseFactor' has a wrong offset!");
static_assert(offsetof(ABP_KuroSkeletalMeshDestructibleActor_C, DamageRadius) == 0x0002FC, "Member 'ABP_KuroSkeletalMeshDestructibleActor_C::DamageRadius' has a wrong offset!");
static_assert(offsetof(ABP_KuroSkeletalMeshDestructibleActor_C, OriginOffset) == 0x000300, "Member 'ABP_KuroSkeletalMeshDestructibleActor_C::OriginOffset' has a wrong offset!");
static_assert(offsetof(ABP_KuroSkeletalMeshDestructibleActor_C, BaseForce) == 0x00030C, "Member 'ABP_KuroSkeletalMeshDestructibleActor_C::BaseForce' has a wrong offset!");
static_assert(offsetof(ABP_KuroSkeletalMeshDestructibleActor_C, IgnoreBullet) == 0x000310, "Member 'ABP_KuroSkeletalMeshDestructibleActor_C::IgnoreBullet' has a wrong offset!");
static_assert(offsetof(ABP_KuroSkeletalMeshDestructibleActor_C, IsDebug) == 0x000311, "Member 'ABP_KuroSkeletalMeshDestructibleActor_C::IsDebug' has a wrong offset!");
static_assert(offsetof(ABP_KuroSkeletalMeshDestructibleActor_C, Impluse) == 0x000314, "Member 'ABP_KuroSkeletalMeshDestructibleActor_C::Impluse' has a wrong offset!");
static_assert(offsetof(ABP_KuroSkeletalMeshDestructibleActor_C, HurtOrigin) == 0x000318, "Member 'ABP_KuroSkeletalMeshDestructibleActor_C::HurtOrigin' has a wrong offset!");
static_assert(offsetof(ABP_KuroSkeletalMeshDestructibleActor_C, CollisionProfileName) == 0x000324, "Member 'ABP_KuroSkeletalMeshDestructibleActor_C::CollisionProfileName' has a wrong offset!");
static_assert(offsetof(ABP_KuroSkeletalMeshDestructibleActor_C, DestructibleIndex) == 0x000330, "Member 'ABP_KuroSkeletalMeshDestructibleActor_C::DestructibleIndex' has a wrong offset!");

}

