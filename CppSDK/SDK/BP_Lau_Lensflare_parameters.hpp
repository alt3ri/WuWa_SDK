#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Lau_Lensflare

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_Lau_Lensflare.BP_Lau_Lensflare_C.ExecuteUbergraph_BP_Lau_Lensflare
// 0x0078 (0x0078 - 0x0000)
struct BP_Lau_Lensflare_C_ExecuteUbergraph_BP_Lau_Lensflare final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds_1;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetGlobalGIActor_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GlobalGI_LaunchScene_C*             K2Node_DynamicCast_AsBP_Global_GI_Launch_Scene;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               K2Node_DynamicCast_As______;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetValue_LinearColor_ReturnValue;         // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue_1;                // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               K2Node_DynamicCast_As_______1;                     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Lau_Lensflare_C_ExecuteUbergraph_BP_Lau_Lensflare) == 0x000008, "Wrong alignment on BP_Lau_Lensflare_C_ExecuteUbergraph_BP_Lau_Lensflare");
static_assert(sizeof(BP_Lau_Lensflare_C_ExecuteUbergraph_BP_Lau_Lensflare) == 0x000078, "Wrong size on BP_Lau_Lensflare_C_ExecuteUbergraph_BP_Lau_Lensflare");
static_assert(offsetof(BP_Lau_Lensflare_C_ExecuteUbergraph_BP_Lau_Lensflare, EntryPoint) == 0x000000, "Member 'BP_Lau_Lensflare_C_ExecuteUbergraph_BP_Lau_Lensflare::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Lau_Lensflare_C_ExecuteUbergraph_BP_Lau_Lensflare, K2Node_Event_DeltaSeconds_1) == 0x000004, "Member 'BP_Lau_Lensflare_C_ExecuteUbergraph_BP_Lau_Lensflare::K2Node_Event_DeltaSeconds_1' has a wrong offset!");
static_assert(offsetof(BP_Lau_Lensflare_C_ExecuteUbergraph_BP_Lau_Lensflare, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_Lau_Lensflare_C_ExecuteUbergraph_BP_Lau_Lensflare::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Lau_Lensflare_C_ExecuteUbergraph_BP_Lau_Lensflare, CallFunc_GetGlobalGIActor_ReturnValue) == 0x000010, "Member 'BP_Lau_Lensflare_C_ExecuteUbergraph_BP_Lau_Lensflare::CallFunc_GetGlobalGIActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lau_Lensflare_C_ExecuteUbergraph_BP_Lau_Lensflare, K2Node_DynamicCast_AsBP_Global_GI_Launch_Scene) == 0x000018, "Member 'BP_Lau_Lensflare_C_ExecuteUbergraph_BP_Lau_Lensflare::K2Node_DynamicCast_AsBP_Global_GI_Launch_Scene' has a wrong offset!");
static_assert(offsetof(BP_Lau_Lensflare_C_ExecuteUbergraph_BP_Lau_Lensflare, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_Lau_Lensflare_C_ExecuteUbergraph_BP_Lau_Lensflare::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Lau_Lensflare_C_ExecuteUbergraph_BP_Lau_Lensflare, CallFunc_GetMaterial_ReturnValue) == 0x000028, "Member 'BP_Lau_Lensflare_C_ExecuteUbergraph_BP_Lau_Lensflare::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lau_Lensflare_C_ExecuteUbergraph_BP_Lau_Lensflare, K2Node_DynamicCast_As______) == 0x000030, "Member 'BP_Lau_Lensflare_C_ExecuteUbergraph_BP_Lau_Lensflare::K2Node_DynamicCast_As______' has a wrong offset!");
static_assert(offsetof(BP_Lau_Lensflare_C_ExecuteUbergraph_BP_Lau_Lensflare, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_Lau_Lensflare_C_ExecuteUbergraph_BP_Lau_Lensflare::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Lau_Lensflare_C_ExecuteUbergraph_BP_Lau_Lensflare, CallFunc_GetValue_LinearColor_ReturnValue) == 0x00003C, "Member 'BP_Lau_Lensflare_C_ExecuteUbergraph_BP_Lau_Lensflare::CallFunc_GetValue_LinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lau_Lensflare_C_ExecuteUbergraph_BP_Lau_Lensflare, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000050, "Member 'BP_Lau_Lensflare_C_ExecuteUbergraph_BP_Lau_Lensflare::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lau_Lensflare_C_ExecuteUbergraph_BP_Lau_Lensflare, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000058, "Member 'BP_Lau_Lensflare_C_ExecuteUbergraph_BP_Lau_Lensflare::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Lau_Lensflare_C_ExecuteUbergraph_BP_Lau_Lensflare, CallFunc_GetMaterial_ReturnValue_1) == 0x000060, "Member 'BP_Lau_Lensflare_C_ExecuteUbergraph_BP_Lau_Lensflare::CallFunc_GetMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Lau_Lensflare_C_ExecuteUbergraph_BP_Lau_Lensflare, K2Node_DynamicCast_As_______1) == 0x000068, "Member 'BP_Lau_Lensflare_C_ExecuteUbergraph_BP_Lau_Lensflare::K2Node_DynamicCast_As_______1' has a wrong offset!");
static_assert(offsetof(BP_Lau_Lensflare_C_ExecuteUbergraph_BP_Lau_Lensflare, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'BP_Lau_Lensflare_C_ExecuteUbergraph_BP_Lau_Lensflare::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BP_Lau_Lensflare.BP_Lau_Lensflare_C.EditorTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Lau_Lensflare_C_EditorTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lau_Lensflare_C_EditorTick) == 0x000004, "Wrong alignment on BP_Lau_Lensflare_C_EditorTick");
static_assert(sizeof(BP_Lau_Lensflare_C_EditorTick) == 0x000004, "Wrong size on BP_Lau_Lensflare_C_EditorTick");
static_assert(offsetof(BP_Lau_Lensflare_C_EditorTick, DeltaSeconds) == 0x000000, "Member 'BP_Lau_Lensflare_C_EditorTick::DeltaSeconds' has a wrong offset!");

// Function BP_Lau_Lensflare.BP_Lau_Lensflare_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Lau_Lensflare_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lau_Lensflare_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Lau_Lensflare_C_ReceiveTick");
static_assert(sizeof(BP_Lau_Lensflare_C_ReceiveTick) == 0x000004, "Wrong size on BP_Lau_Lensflare_C_ReceiveTick");
static_assert(offsetof(BP_Lau_Lensflare_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Lau_Lensflare_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

