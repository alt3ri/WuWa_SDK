#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MediaPlayForModel

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "Engine_structs.hpp"
#include "KuroRenderingRuntimeBPPlugin_structs.hpp"
#include "KuroRenderingRuntimeBPPlugin_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass MediaPlayForModel.MediaPlayForModel_C
// 0x0070 (0x0330 - 0x02C0)
class AMediaPlayForModel_C final : public AKuroEditorTickActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAkComponent*                           Ak;                                                // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterial*                              ViedoMaterialTranSlucentTwoSide;                   // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterial*                              ViedoMaterialTranSlucent;                          // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterial*                              ViedoMaterial;                                     // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Intensity;                                         // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DarkIntensity;                                     // 0x02FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AoiDistance;                                       // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Translucent;                                       // 0x0304(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TwoSide;                                           // 0x0305(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_306[0x2];                                      // 0x0306(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Opacity;                                           // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C[0x4];                                      // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPDA_MediaPlayDataAsset_C*              MediaPlayDataAsset;                                // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMediaPlayer*                           ShareMediaPlayer;                                  // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMediaTexture*                          ShareMediaTexture;                                 // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOpen;                                            // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DrawDebugAoi;                                      // 0x0329(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_MediaPlayForModel(int32 EntryPoint);
	void CloseSound();
	void PlaySound();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void Stop();
	void Start();
	void EditorInit();
	void EditorTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void Resume();
	void Pause();
	void TickOutside();
	void CloseSource();
	void OpenSource();
	void ConstructionMediaPlay();
	void ReInit();

	void GetAoiRange(int32* Ret) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MediaPlayForModel_C">();
	}
	static class AMediaPlayForModel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMediaPlayForModel_C>();
	}
};
static_assert(alignof(AMediaPlayForModel_C) == 0x000008, "Wrong alignment on AMediaPlayForModel_C");
static_assert(sizeof(AMediaPlayForModel_C) == 0x000330, "Wrong size on AMediaPlayForModel_C");
static_assert(offsetof(AMediaPlayForModel_C, UberGraphFrame) == 0x0002C0, "Member 'AMediaPlayForModel_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AMediaPlayForModel_C, Ak) == 0x0002C8, "Member 'AMediaPlayForModel_C::Ak' has a wrong offset!");
static_assert(offsetof(AMediaPlayForModel_C, StaticMesh) == 0x0002D0, "Member 'AMediaPlayForModel_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(AMediaPlayForModel_C, DefaultSceneRoot) == 0x0002D8, "Member 'AMediaPlayForModel_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AMediaPlayForModel_C, ViedoMaterialTranSlucentTwoSide) == 0x0002E0, "Member 'AMediaPlayForModel_C::ViedoMaterialTranSlucentTwoSide' has a wrong offset!");
static_assert(offsetof(AMediaPlayForModel_C, ViedoMaterialTranSlucent) == 0x0002E8, "Member 'AMediaPlayForModel_C::ViedoMaterialTranSlucent' has a wrong offset!");
static_assert(offsetof(AMediaPlayForModel_C, ViedoMaterial) == 0x0002F0, "Member 'AMediaPlayForModel_C::ViedoMaterial' has a wrong offset!");
static_assert(offsetof(AMediaPlayForModel_C, Intensity) == 0x0002F8, "Member 'AMediaPlayForModel_C::Intensity' has a wrong offset!");
static_assert(offsetof(AMediaPlayForModel_C, DarkIntensity) == 0x0002FC, "Member 'AMediaPlayForModel_C::DarkIntensity' has a wrong offset!");
static_assert(offsetof(AMediaPlayForModel_C, AoiDistance) == 0x000300, "Member 'AMediaPlayForModel_C::AoiDistance' has a wrong offset!");
static_assert(offsetof(AMediaPlayForModel_C, Translucent) == 0x000304, "Member 'AMediaPlayForModel_C::Translucent' has a wrong offset!");
static_assert(offsetof(AMediaPlayForModel_C, TwoSide) == 0x000305, "Member 'AMediaPlayForModel_C::TwoSide' has a wrong offset!");
static_assert(offsetof(AMediaPlayForModel_C, Opacity) == 0x000308, "Member 'AMediaPlayForModel_C::Opacity' has a wrong offset!");
static_assert(offsetof(AMediaPlayForModel_C, MediaPlayDataAsset) == 0x000310, "Member 'AMediaPlayForModel_C::MediaPlayDataAsset' has a wrong offset!");
static_assert(offsetof(AMediaPlayForModel_C, ShareMediaPlayer) == 0x000318, "Member 'AMediaPlayForModel_C::ShareMediaPlayer' has a wrong offset!");
static_assert(offsetof(AMediaPlayForModel_C, ShareMediaTexture) == 0x000320, "Member 'AMediaPlayForModel_C::ShareMediaTexture' has a wrong offset!");
static_assert(offsetof(AMediaPlayForModel_C, IsOpen) == 0x000328, "Member 'AMediaPlayForModel_C::IsOpen' has a wrong offset!");
static_assert(offsetof(AMediaPlayForModel_C, DrawDebugAoi) == 0x000329, "Member 'AMediaPlayForModel_C::DrawDebugAoi' has a wrong offset!");

}

