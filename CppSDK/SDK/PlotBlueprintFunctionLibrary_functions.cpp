#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlotBlueprintFunctionLibrary

#include "Basic.hpp"

#include "PlotBlueprintFunctionLibrary_classes.hpp"
#include "PlotBlueprintFunctionLibrary_parameters.hpp"


namespace SDK
{

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.IsInSequence
// (Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UPlotBlueprintFunctionLibrary_C::IsInSequence(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlotBlueprintFunctionLibrary_C", "IsInSequence");

	Params::PlotBlueprintFunctionLibrary_C_IsInSequence Parms{};

	Parms.__WorldContext = __WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.SkipCurrentSequence
// (Native, Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlotBlueprintFunctionLibrary_C::SkipCurrentSequence(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlotBlueprintFunctionLibrary_C", "SkipCurrentSequence");

	Params::PlotBlueprintFunctionLibrary_C_SkipCurrentSequence Parms{};

	Parms.__WorldContext = __WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.PauseSequence
// (Native, Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlotBlueprintFunctionLibrary_C::PauseSequence(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlotBlueprintFunctionLibrary_C", "PauseSequence");

	Params::PlotBlueprintFunctionLibrary_C_PauseSequence Parms{};

	Parms.__WorldContext = __WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.ResumeSequence
// (Native, Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlotBlueprintFunctionLibrary_C::ResumeSequence(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlotBlueprintFunctionLibrary_C", "ResumeSequence");

	Params::PlotBlueprintFunctionLibrary_C_ResumeSequence Parms{};

	Parms.__WorldContext = __WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.UseEnterMoveMode
// (Native, Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InCharacter1                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlotBlueprintFunctionLibrary_C::UseEnterMoveMode(class AActor* InCharacter1, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlotBlueprintFunctionLibrary_C", "UseEnterMoveMode");

	Params::PlotBlueprintFunctionLibrary_C_UseEnterMoveMode Parms{};

	Parms.InCharacter1 = InCharacter1;
	Parms.__WorldContext = __WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.StartPlotTs
// (Native, Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           InRes                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlotBlueprintFunctionLibrary_C::StartPlotTs(const class FString& InRes, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlotBlueprintFunctionLibrary_C", "StartPlotTs");

	Params::PlotBlueprintFunctionLibrary_C_StartPlotTs Parms{};

	Parms.InRes = std::move(InRes);
	Parms.__WorldContext = __WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.IsInPerformingPlot
// (Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UPlotBlueprintFunctionLibrary_C::IsInPerformingPlot(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlotBlueprintFunctionLibrary_C", "IsInPerformingPlot");

	Params::PlotBlueprintFunctionLibrary_C_IsInPerformingPlot Parms{};

	Parms.__WorldContext = __WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.TriggerBlackSequence
// (Native, Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlotBlueprintFunctionLibrary_C::TriggerBlackSequence(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlotBlueprintFunctionLibrary_C", "TriggerBlackSequence");

	Params::PlotBlueprintFunctionLibrary_C_TriggerBlackSequence Parms{};

	Parms.__WorldContext = __WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.ChangePlotWeather
// (Native, Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   WeatherId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsInherit                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
// float                                   TweenTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlotBlueprintFunctionLibrary_C::ChangePlotWeather(int32 WeatherId, bool IsInherit, float TweenTime, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlotBlueprintFunctionLibrary_C", "ChangePlotWeather");

	Params::PlotBlueprintFunctionLibrary_C_ChangePlotWeather Parms{};

	Parms.WeatherId = WeatherId;
	Parms.IsInherit = IsInherit;
	Parms.TweenTime = TweenTime;
	Parms.__WorldContext = __WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.ShowNameInput
// (Native, Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlotBlueprintFunctionLibrary_C::ShowNameInput(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlotBlueprintFunctionLibrary_C", "ShowNameInput");

	Params::PlotBlueprintFunctionLibrary_C_ShowNameInput Parms{};

	Parms.__WorldContext = __WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.AddBurstEyeRenderingMaterial
// (Native, Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsBoy                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlotBlueprintFunctionLibrary_C::AddBurstEyeRenderingMaterial(bool IsBoy, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlotBlueprintFunctionLibrary_C", "AddBurstEyeRenderingMaterial");

	Params::PlotBlueprintFunctionLibrary_C_AddBurstEyeRenderingMaterial Parms{};

	Parms.IsBoy = IsBoy;
	Parms.__WorldContext = __WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.RemoveBurstEyeRenderingMaterial
// (Native, Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsBoy                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlotBlueprintFunctionLibrary_C::RemoveBurstEyeRenderingMaterial(bool IsBoy, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlotBlueprintFunctionLibrary_C", "RemoveBurstEyeRenderingMaterial");

	Params::PlotBlueprintFunctionLibrary_C_RemoveBurstEyeRenderingMaterial Parms{};

	Parms.IsBoy = IsBoy;
	Parms.__WorldContext = __WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.ChangePlotTimeOfDay
// (Native, Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsInherit                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   StartSecond                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   EndSecond                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TweenFrame                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlotBlueprintFunctionLibrary_C::ChangePlotTimeOfDay(bool IsInherit, int32 StartSecond, int32 EndSecond, int32 TweenFrame, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlotBlueprintFunctionLibrary_C", "ChangePlotTimeOfDay");

	Params::PlotBlueprintFunctionLibrary_C_ChangePlotTimeOfDay Parms{};

	Parms.IsInherit = IsInherit;
	Parms.StartSecond = StartSecond;
	Parms.EndSecond = EndSecond;
	Parms.TweenFrame = TweenFrame;
	Parms.__WorldContext = __WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.ExecuteSequenceEvents
// (Native, Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlotBlueprintFunctionLibrary_C::ExecuteSequenceEvents(const class FString& Key, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlotBlueprintFunctionLibrary_C", "ExecuteSequenceEvents");

	Params::PlotBlueprintFunctionLibrary_C_ExecuteSequenceEvents Parms{};

	Parms.Key = std::move(Key);
	Parms.__WorldContext = __WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.TriggerCutChange
// (Native, Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlotBlueprintFunctionLibrary_C::TriggerCutChange(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlotBlueprintFunctionLibrary_C", "TriggerCutChange");

	Params::PlotBlueprintFunctionLibrary_C_TriggerCutChange Parms{};

	Parms.__WorldContext = __WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.OpenChapterUi
// (Native, Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ChapterState                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// int32                                   ChapterId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlotBlueprintFunctionLibrary_C::OpenChapterUi(int32 ChapterState, int32 ChapterId, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlotBlueprintFunctionLibrary_C", "OpenChapterUi");

	Params::PlotBlueprintFunctionLibrary_C_OpenChapterUi Parms{};

	Parms.ChapterState = ChapterState;
	Parms.ChapterId = ChapterId;
	Parms.__WorldContext = __WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.ShowLogo
// (Native, Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlotBlueprintFunctionLibrary_C::ShowLogo(float Time, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlotBlueprintFunctionLibrary_C", "ShowLogo");

	Params::PlotBlueprintFunctionLibrary_C_ShowLogo Parms{};

	Parms.Time = Time;
	Parms.__WorldContext = __WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.CloseUiView
// (Native, Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlotBlueprintFunctionLibrary_C::CloseUiView(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlotBlueprintFunctionLibrary_C", "CloseUiView");

	Params::PlotBlueprintFunctionLibrary_C_CloseUiView Parms{};

	Parms.__WorldContext = __WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.OpenUiView
// (Native, Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           MaleAssetName1                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           FemaleAssetName1                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           MaleSpineName1                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           FemaleSpineName1                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    NeedLoop                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlotBlueprintFunctionLibrary_C::OpenUiView(const class FString& MaleAssetName1, const class FString& FemaleAssetName1, const class FString& MaleSpineName1, const class FString& FemaleSpineName1, bool NeedLoop, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlotBlueprintFunctionLibrary_C", "OpenUiView");

	Params::PlotBlueprintFunctionLibrary_C_OpenUiView Parms{};

	Parms.MaleAssetName1 = std::move(MaleAssetName1);
	Parms.FemaleAssetName1 = std::move(FemaleAssetName1);
	Parms.MaleSpineName1 = std::move(MaleSpineName1);
	Parms.FemaleSpineName1 = std::move(FemaleSpineName1);
	Parms.NeedLoop = NeedLoop;
	Parms.__WorldContext = __WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.PlayUiLevelSequence
// (Native, Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           SeqName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlotBlueprintFunctionLibrary_C::PlayUiLevelSequence(const class FString& SeqName, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlotBlueprintFunctionLibrary_C", "PlayUiLevelSequence");

	Params::PlotBlueprintFunctionLibrary_C_PlayUiLevelSequence Parms{};

	Parms.SeqName = std::move(SeqName);
	Parms.__WorldContext = __WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.ExecuteEntitySequenceEvents
// (Native, Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   EntityId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlotBlueprintFunctionLibrary_C::ExecuteEntitySequenceEvents(const class FString& Key, int32 EntityId, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlotBlueprintFunctionLibrary_C", "ExecuteEntitySequenceEvents");

	Params::PlotBlueprintFunctionLibrary_C_ExecuteEntitySequenceEvents Parms{};

	Parms.Key = std::move(Key);
	Parms.EntityId = EntityId;
	Parms.__WorldContext = __WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.PlaySpineAnimForGender
// (Native, Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           MaleSpineName                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           FemaleSpineName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    NeedLoop                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlotBlueprintFunctionLibrary_C::PlaySpineAnimForGender(const class FString& MaleSpineName, const class FString& FemaleSpineName, bool NeedLoop, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlotBlueprintFunctionLibrary_C", "PlaySpineAnimForGender");

	Params::PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGender Parms{};

	Parms.MaleSpineName = std::move(MaleSpineName);
	Parms.FemaleSpineName = std::move(FemaleSpineName);
	Parms.NeedLoop = NeedLoop;
	Parms.__WorldContext = __WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.PlaySpineAnim
// (Native, Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           SpineName1                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    NeedLoop                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlotBlueprintFunctionLibrary_C::PlaySpineAnim(const class FString& SpineName1, bool NeedLoop, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlotBlueprintFunctionLibrary_C", "PlaySpineAnim");

	Params::PlotBlueprintFunctionLibrary_C_PlaySpineAnim Parms{};

	Parms.SpineName1 = std::move(SpineName1);
	Parms.NeedLoop = NeedLoop;
	Parms.__WorldContext = __WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.OpenUiViewInArray
// (Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           MaleAssetName1                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           FemaleAssetName1                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<struct FSpineThingsInfo>         MaleSpineArray1                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FSpineThingsInfo>         FemaleSpineArray1                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlotBlueprintFunctionLibrary_C::OpenUiViewInArray(const class FString& MaleAssetName1, const class FString& FemaleAssetName1, TArray<struct FSpineThingsInfo>& MaleSpineArray1, TArray<struct FSpineThingsInfo>& FemaleSpineArray1, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlotBlueprintFunctionLibrary_C", "OpenUiViewInArray");

	Params::PlotBlueprintFunctionLibrary_C_OpenUiViewInArray Parms{};

	Parms.MaleAssetName1 = std::move(MaleAssetName1);
	Parms.FemaleAssetName1 = std::move(FemaleAssetName1);
	Parms.MaleSpineArray1 = std::move(MaleSpineArray1);
	Parms.FemaleSpineArray1 = std::move(FemaleSpineArray1);
	Parms.__WorldContext = __WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	MaleSpineArray1 = std::move(Parms.MaleSpineArray1);
	FemaleSpineArray1 = std::move(Parms.FemaleSpineArray1);
}


// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.PlaySpineAnimForGenderInArray
// (Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FSpineThingsInfo>         MaleSpineArray1                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FSpineThingsInfo>         FemaleSpineArray1                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlotBlueprintFunctionLibrary_C::PlaySpineAnimForGenderInArray(TArray<struct FSpineThingsInfo>& MaleSpineArray1, TArray<struct FSpineThingsInfo>& FemaleSpineArray1, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlotBlueprintFunctionLibrary_C", "PlaySpineAnimForGenderInArray");

	Params::PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGenderInArray Parms{};

	Parms.MaleSpineArray1 = std::move(MaleSpineArray1);
	Parms.FemaleSpineArray1 = std::move(FemaleSpineArray1);
	Parms.__WorldContext = __WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	MaleSpineArray1 = std::move(Parms.MaleSpineArray1);
	FemaleSpineArray1 = std::move(Parms.FemaleSpineArray1);
}


// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.CloseSpineAnim
// (Native, Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           SpineName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlotBlueprintFunctionLibrary_C::CloseSpineAnim(const class FString& SpineName, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlotBlueprintFunctionLibrary_C", "CloseSpineAnim");

	Params::PlotBlueprintFunctionLibrary_C_CloseSpineAnim Parms{};

	Parms.SpineName = std::move(SpineName);
	Parms.__WorldContext = __WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.CloseSpineAnimInArray
// (Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   SpineArray                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlotBlueprintFunctionLibrary_C::CloseSpineAnimInArray(TArray<class FString>& SpineArray, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlotBlueprintFunctionLibrary_C", "CloseSpineAnimInArray");

	Params::PlotBlueprintFunctionLibrary_C_CloseSpineAnimInArray Parms{};

	Parms.SpineArray = std::move(SpineArray);
	Parms.__WorldContext = __WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	SpineArray = std::move(Parms.SpineArray);
}


// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.AddInteractTagToInteractingGravityMachine
// (Native, Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlotBlueprintFunctionLibrary_C::AddInteractTagToInteractingGravityMachine(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlotBlueprintFunctionLibrary_C", "AddInteractTagToInteractingGravityMachine");

	Params::PlotBlueprintFunctionLibrary_C_AddInteractTagToInteractingGravityMachine Parms{};

	Parms.__WorldContext = __WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.RemoveInteractTagFromInteractingGravityMachine
// (Native, Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlotBlueprintFunctionLibrary_C::RemoveInteractTagFromInteractingGravityMachine(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlotBlueprintFunctionLibrary_C", "RemoveInteractTagFromInteractingGravityMachine");

	Params::PlotBlueprintFunctionLibrary_C_RemoveInteractTagFromInteractingGravityMachine Parms{};

	Parms.__WorldContext = __WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.TriggerTagToInteractingGravityMachine
// (Native, Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlotBlueprintFunctionLibrary_C::TriggerTagToInteractingGravityMachine(const struct FGameplayTag& Tag, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlotBlueprintFunctionLibrary_C", "TriggerTagToInteractingGravityMachine");

	Params::PlotBlueprintFunctionLibrary_C_TriggerTagToInteractingGravityMachine Parms{};

	Parms.Tag = std::move(Tag);
	Parms.__WorldContext = __WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

