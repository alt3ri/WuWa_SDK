#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TsHotFixActionHandle

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "Slate_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function TsHotFixActionHandle.TsHotFixActionHandle_C.OnPressActionCallback__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct TsHotFixActionHandle_C_OnPressActionCallback__DelegateSignature final
{
public:
	bool                                          IsPress;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Param_ActionName;                                  // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FKey                                   Key;                                               // 0x0018(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(TsHotFixActionHandle_C_OnPressActionCallback__DelegateSignature) == 0x000008, "Wrong alignment on TsHotFixActionHandle_C_OnPressActionCallback__DelegateSignature");
static_assert(sizeof(TsHotFixActionHandle_C_OnPressActionCallback__DelegateSignature) == 0x000038, "Wrong size on TsHotFixActionHandle_C_OnPressActionCallback__DelegateSignature");
static_assert(offsetof(TsHotFixActionHandle_C_OnPressActionCallback__DelegateSignature, IsPress) == 0x000000, "Member 'TsHotFixActionHandle_C_OnPressActionCallback__DelegateSignature::IsPress' has a wrong offset!");
static_assert(offsetof(TsHotFixActionHandle_C_OnPressActionCallback__DelegateSignature, Param_ActionName) == 0x000008, "Member 'TsHotFixActionHandle_C_OnPressActionCallback__DelegateSignature::Param_ActionName' has a wrong offset!");
static_assert(offsetof(TsHotFixActionHandle_C_OnPressActionCallback__DelegateSignature, Key) == 0x000018, "Member 'TsHotFixActionHandle_C_OnPressActionCallback__DelegateSignature::Key' has a wrong offset!");

// Function TsHotFixActionHandle.TsHotFixActionHandle_C.OnTouchActionCallback__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct TsHotFixActionHandle_C_OnTouchActionCallback__DelegateSignature final
{
public:
	bool                                          IsPress;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ETouchIndex                                   Param_TouchIndex;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Param_TouchPosition;                               // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsHotFixActionHandle_C_OnTouchActionCallback__DelegateSignature) == 0x000004, "Wrong alignment on TsHotFixActionHandle_C_OnTouchActionCallback__DelegateSignature");
static_assert(sizeof(TsHotFixActionHandle_C_OnTouchActionCallback__DelegateSignature) == 0x000010, "Wrong size on TsHotFixActionHandle_C_OnTouchActionCallback__DelegateSignature");
static_assert(offsetof(TsHotFixActionHandle_C_OnTouchActionCallback__DelegateSignature, IsPress) == 0x000000, "Member 'TsHotFixActionHandle_C_OnTouchActionCallback__DelegateSignature::IsPress' has a wrong offset!");
static_assert(offsetof(TsHotFixActionHandle_C_OnTouchActionCallback__DelegateSignature, Param_TouchIndex) == 0x000001, "Member 'TsHotFixActionHandle_C_OnTouchActionCallback__DelegateSignature::Param_TouchIndex' has a wrong offset!");
static_assert(offsetof(TsHotFixActionHandle_C_OnTouchActionCallback__DelegateSignature, Param_TouchPosition) == 0x000004, "Member 'TsHotFixActionHandle_C_OnTouchActionCallback__DelegateSignature::Param_TouchPosition' has a wrong offset!");

// Function TsHotFixActionHandle.TsHotFixActionHandle_C.OnTouchMovedActionCallback__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct TsHotFixActionHandle_C_OnTouchMovedActionCallback__DelegateSignature final
{
public:
	ETouchIndex                                   Param_TouchIndex;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Param_TouchPosition;                               // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsHotFixActionHandle_C_OnTouchMovedActionCallback__DelegateSignature) == 0x000004, "Wrong alignment on TsHotFixActionHandle_C_OnTouchMovedActionCallback__DelegateSignature");
static_assert(sizeof(TsHotFixActionHandle_C_OnTouchMovedActionCallback__DelegateSignature) == 0x000010, "Wrong size on TsHotFixActionHandle_C_OnTouchMovedActionCallback__DelegateSignature");
static_assert(offsetof(TsHotFixActionHandle_C_OnTouchMovedActionCallback__DelegateSignature, Param_TouchIndex) == 0x000000, "Member 'TsHotFixActionHandle_C_OnTouchMovedActionCallback__DelegateSignature::Param_TouchIndex' has a wrong offset!");
static_assert(offsetof(TsHotFixActionHandle_C_OnTouchMovedActionCallback__DelegateSignature, Param_TouchPosition) == 0x000004, "Member 'TsHotFixActionHandle_C_OnTouchMovedActionCallback__DelegateSignature::Param_TouchPosition' has a wrong offset!");

// Function TsHotFixActionHandle.TsHotFixActionHandle_C.OnAxisCallback__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct TsHotFixActionHandle_C_OnAxisCallback__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Param_AxisName;                                    // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(TsHotFixActionHandle_C_OnAxisCallback__DelegateSignature) == 0x000008, "Wrong alignment on TsHotFixActionHandle_C_OnAxisCallback__DelegateSignature");
static_assert(sizeof(TsHotFixActionHandle_C_OnAxisCallback__DelegateSignature) == 0x000018, "Wrong size on TsHotFixActionHandle_C_OnAxisCallback__DelegateSignature");
static_assert(offsetof(TsHotFixActionHandle_C_OnAxisCallback__DelegateSignature, Value) == 0x000000, "Member 'TsHotFixActionHandle_C_OnAxisCallback__DelegateSignature::Value' has a wrong offset!");
static_assert(offsetof(TsHotFixActionHandle_C_OnAxisCallback__DelegateSignature, Param_AxisName) == 0x000008, "Member 'TsHotFixActionHandle_C_OnAxisCallback__DelegateSignature::Param_AxisName' has a wrong offset!");

// Function TsHotFixActionHandle.TsHotFixActionHandle_C.OnAnyKeyPressCallback__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct TsHotFixActionHandle_C_OnAnyKeyPressCallback__DelegateSignature final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(TsHotFixActionHandle_C_OnAnyKeyPressCallback__DelegateSignature) == 0x000008, "Wrong alignment on TsHotFixActionHandle_C_OnAnyKeyPressCallback__DelegateSignature");
static_assert(sizeof(TsHotFixActionHandle_C_OnAnyKeyPressCallback__DelegateSignature) == 0x000020, "Wrong size on TsHotFixActionHandle_C_OnAnyKeyPressCallback__DelegateSignature");
static_assert(offsetof(TsHotFixActionHandle_C_OnAnyKeyPressCallback__DelegateSignature, Key) == 0x000000, "Member 'TsHotFixActionHandle_C_OnAnyKeyPressCallback__DelegateSignature::Key' has a wrong offset!");

// Function TsHotFixActionHandle.TsHotFixActionHandle_C.OnPressAction
// 0x0020 (0x0020 - 0x0000)
struct TsHotFixActionHandle_C_OnPressAction final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(TsHotFixActionHandle_C_OnPressAction) == 0x000008, "Wrong alignment on TsHotFixActionHandle_C_OnPressAction");
static_assert(sizeof(TsHotFixActionHandle_C_OnPressAction) == 0x000020, "Wrong size on TsHotFixActionHandle_C_OnPressAction");
static_assert(offsetof(TsHotFixActionHandle_C_OnPressAction, Key) == 0x000000, "Member 'TsHotFixActionHandle_C_OnPressAction::Key' has a wrong offset!");

// Function TsHotFixActionHandle.TsHotFixActionHandle_C.OnReleaseAction
// 0x0020 (0x0020 - 0x0000)
struct TsHotFixActionHandle_C_OnReleaseAction final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(TsHotFixActionHandle_C_OnReleaseAction) == 0x000008, "Wrong alignment on TsHotFixActionHandle_C_OnReleaseAction");
static_assert(sizeof(TsHotFixActionHandle_C_OnReleaseAction) == 0x000020, "Wrong size on TsHotFixActionHandle_C_OnReleaseAction");
static_assert(offsetof(TsHotFixActionHandle_C_OnReleaseAction, Key) == 0x000000, "Member 'TsHotFixActionHandle_C_OnReleaseAction::Key' has a wrong offset!");

// Function TsHotFixActionHandle.TsHotFixActionHandle_C.AddPressBinding
// 0x0028 (0x0028 - 0x0000)
struct TsHotFixActionHandle_C_AddPressBinding final
{
public:
	class FString                                 Param_ActionName;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class ABasePlayerController*                  Controller;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsHotFixActionHandle_C_AddPressBinding) == 0x000008, "Wrong alignment on TsHotFixActionHandle_C_AddPressBinding");
static_assert(sizeof(TsHotFixActionHandle_C_AddPressBinding) == 0x000028, "Wrong size on TsHotFixActionHandle_C_AddPressBinding");
static_assert(offsetof(TsHotFixActionHandle_C_AddPressBinding, Param_ActionName) == 0x000000, "Member 'TsHotFixActionHandle_C_AddPressBinding::Param_ActionName' has a wrong offset!");
static_assert(offsetof(TsHotFixActionHandle_C_AddPressBinding, Controller) == 0x000010, "Member 'TsHotFixActionHandle_C_AddPressBinding::Controller' has a wrong offset!");
static_assert(offsetof(TsHotFixActionHandle_C_AddPressBinding, CallFunc_Conv_StringToName_ReturnValue) == 0x000018, "Member 'TsHotFixActionHandle_C_AddPressBinding::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");

// Function TsHotFixActionHandle.TsHotFixActionHandle_C.AddReleaseBinding
// 0x0028 (0x0028 - 0x0000)
struct TsHotFixActionHandle_C_AddReleaseBinding final
{
public:
	class FString                                 Param_ActionName;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class ABasePlayerController*                  Controller;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsHotFixActionHandle_C_AddReleaseBinding) == 0x000008, "Wrong alignment on TsHotFixActionHandle_C_AddReleaseBinding");
static_assert(sizeof(TsHotFixActionHandle_C_AddReleaseBinding) == 0x000028, "Wrong size on TsHotFixActionHandle_C_AddReleaseBinding");
static_assert(offsetof(TsHotFixActionHandle_C_AddReleaseBinding, Param_ActionName) == 0x000000, "Member 'TsHotFixActionHandle_C_AddReleaseBinding::Param_ActionName' has a wrong offset!");
static_assert(offsetof(TsHotFixActionHandle_C_AddReleaseBinding, Controller) == 0x000010, "Member 'TsHotFixActionHandle_C_AddReleaseBinding::Controller' has a wrong offset!");
static_assert(offsetof(TsHotFixActionHandle_C_AddReleaseBinding, CallFunc_Conv_StringToName_ReturnValue) == 0x000018, "Member 'TsHotFixActionHandle_C_AddReleaseBinding::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");

// Function TsHotFixActionHandle.TsHotFixActionHandle_C.AddTouchPressBinding
// 0x0008 (0x0008 - 0x0000)
struct TsHotFixActionHandle_C_AddTouchPressBinding final
{
public:
	class ABasePlayerController*                  Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsHotFixActionHandle_C_AddTouchPressBinding) == 0x000008, "Wrong alignment on TsHotFixActionHandle_C_AddTouchPressBinding");
static_assert(sizeof(TsHotFixActionHandle_C_AddTouchPressBinding) == 0x000008, "Wrong size on TsHotFixActionHandle_C_AddTouchPressBinding");
static_assert(offsetof(TsHotFixActionHandle_C_AddTouchPressBinding, Controller) == 0x000000, "Member 'TsHotFixActionHandle_C_AddTouchPressBinding::Controller' has a wrong offset!");

// Function TsHotFixActionHandle.TsHotFixActionHandle_C.AddTouchReleaseBinding
// 0x0008 (0x0008 - 0x0000)
struct TsHotFixActionHandle_C_AddTouchReleaseBinding final
{
public:
	class ABasePlayerController*                  Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsHotFixActionHandle_C_AddTouchReleaseBinding) == 0x000008, "Wrong alignment on TsHotFixActionHandle_C_AddTouchReleaseBinding");
static_assert(sizeof(TsHotFixActionHandle_C_AddTouchReleaseBinding) == 0x000008, "Wrong size on TsHotFixActionHandle_C_AddTouchReleaseBinding");
static_assert(offsetof(TsHotFixActionHandle_C_AddTouchReleaseBinding, Controller) == 0x000000, "Member 'TsHotFixActionHandle_C_AddTouchReleaseBinding::Controller' has a wrong offset!");

// Function TsHotFixActionHandle.TsHotFixActionHandle_C.OnTouchPressAction
// 0x0010 (0x0010 - 0x0000)
struct TsHotFixActionHandle_C_OnTouchPressAction final
{
public:
	ETouchIndex                                   Param_TouchIndex;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Position;                                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsHotFixActionHandle_C_OnTouchPressAction) == 0x000004, "Wrong alignment on TsHotFixActionHandle_C_OnTouchPressAction");
static_assert(sizeof(TsHotFixActionHandle_C_OnTouchPressAction) == 0x000010, "Wrong size on TsHotFixActionHandle_C_OnTouchPressAction");
static_assert(offsetof(TsHotFixActionHandle_C_OnTouchPressAction, Param_TouchIndex) == 0x000000, "Member 'TsHotFixActionHandle_C_OnTouchPressAction::Param_TouchIndex' has a wrong offset!");
static_assert(offsetof(TsHotFixActionHandle_C_OnTouchPressAction, Position) == 0x000004, "Member 'TsHotFixActionHandle_C_OnTouchPressAction::Position' has a wrong offset!");

// Function TsHotFixActionHandle.TsHotFixActionHandle_C.OnTouchReleaseAction
// 0x0010 (0x0010 - 0x0000)
struct TsHotFixActionHandle_C_OnTouchReleaseAction final
{
public:
	ETouchIndex                                   Param_TouchIndex;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Position;                                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsHotFixActionHandle_C_OnTouchReleaseAction) == 0x000004, "Wrong alignment on TsHotFixActionHandle_C_OnTouchReleaseAction");
static_assert(sizeof(TsHotFixActionHandle_C_OnTouchReleaseAction) == 0x000010, "Wrong size on TsHotFixActionHandle_C_OnTouchReleaseAction");
static_assert(offsetof(TsHotFixActionHandle_C_OnTouchReleaseAction, Param_TouchIndex) == 0x000000, "Member 'TsHotFixActionHandle_C_OnTouchReleaseAction::Param_TouchIndex' has a wrong offset!");
static_assert(offsetof(TsHotFixActionHandle_C_OnTouchReleaseAction, Position) == 0x000004, "Member 'TsHotFixActionHandle_C_OnTouchReleaseAction::Position' has a wrong offset!");

// Function TsHotFixActionHandle.TsHotFixActionHandle_C.ClearActionBinding
// 0x0008 (0x0008 - 0x0000)
struct TsHotFixActionHandle_C_ClearActionBinding final
{
public:
	class ABasePlayerController*                  Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsHotFixActionHandle_C_ClearActionBinding) == 0x000008, "Wrong alignment on TsHotFixActionHandle_C_ClearActionBinding");
static_assert(sizeof(TsHotFixActionHandle_C_ClearActionBinding) == 0x000008, "Wrong size on TsHotFixActionHandle_C_ClearActionBinding");
static_assert(offsetof(TsHotFixActionHandle_C_ClearActionBinding, Controller) == 0x000000, "Member 'TsHotFixActionHandle_C_ClearActionBinding::Controller' has a wrong offset!");

// Function TsHotFixActionHandle.TsHotFixActionHandle_C.OnTouchMoveAction
// 0x0010 (0x0010 - 0x0000)
struct TsHotFixActionHandle_C_OnTouchMoveAction final
{
public:
	ETouchIndex                                   Touchindex;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Position;                                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsHotFixActionHandle_C_OnTouchMoveAction) == 0x000004, "Wrong alignment on TsHotFixActionHandle_C_OnTouchMoveAction");
static_assert(sizeof(TsHotFixActionHandle_C_OnTouchMoveAction) == 0x000010, "Wrong size on TsHotFixActionHandle_C_OnTouchMoveAction");
static_assert(offsetof(TsHotFixActionHandle_C_OnTouchMoveAction, Touchindex) == 0x000000, "Member 'TsHotFixActionHandle_C_OnTouchMoveAction::Touchindex' has a wrong offset!");
static_assert(offsetof(TsHotFixActionHandle_C_OnTouchMoveAction, Position) == 0x000004, "Member 'TsHotFixActionHandle_C_OnTouchMoveAction::Position' has a wrong offset!");

// Function TsHotFixActionHandle.TsHotFixActionHandle_C.AddTouchMoveBinding
// 0x0008 (0x0008 - 0x0000)
struct TsHotFixActionHandle_C_AddTouchMoveBinding final
{
public:
	class ABasePlayerController*                  Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsHotFixActionHandle_C_AddTouchMoveBinding) == 0x000008, "Wrong alignment on TsHotFixActionHandle_C_AddTouchMoveBinding");
static_assert(sizeof(TsHotFixActionHandle_C_AddTouchMoveBinding) == 0x000008, "Wrong size on TsHotFixActionHandle_C_AddTouchMoveBinding");
static_assert(offsetof(TsHotFixActionHandle_C_AddTouchMoveBinding, Controller) == 0x000000, "Member 'TsHotFixActionHandle_C_AddTouchMoveBinding::Controller' has a wrong offset!");

// Function TsHotFixActionHandle.TsHotFixActionHandle_C.AddAxisBinding
// 0x0028 (0x0028 - 0x0000)
struct TsHotFixActionHandle_C_AddAxisBinding final
{
public:
	class FString                                 Param_AxisName;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class ABasePlayerController*                  Controller;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsHotFixActionHandle_C_AddAxisBinding) == 0x000008, "Wrong alignment on TsHotFixActionHandle_C_AddAxisBinding");
static_assert(sizeof(TsHotFixActionHandle_C_AddAxisBinding) == 0x000028, "Wrong size on TsHotFixActionHandle_C_AddAxisBinding");
static_assert(offsetof(TsHotFixActionHandle_C_AddAxisBinding, Param_AxisName) == 0x000000, "Member 'TsHotFixActionHandle_C_AddAxisBinding::Param_AxisName' has a wrong offset!");
static_assert(offsetof(TsHotFixActionHandle_C_AddAxisBinding, Controller) == 0x000010, "Member 'TsHotFixActionHandle_C_AddAxisBinding::Controller' has a wrong offset!");
static_assert(offsetof(TsHotFixActionHandle_C_AddAxisBinding, CallFunc_Conv_StringToName_ReturnValue) == 0x000018, "Member 'TsHotFixActionHandle_C_AddAxisBinding::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");

// Function TsHotFixActionHandle.TsHotFixActionHandle_C.OnAxisInput
// 0x0004 (0x0004 - 0x0000)
struct TsHotFixActionHandle_C_OnAxisInput final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsHotFixActionHandle_C_OnAxisInput) == 0x000004, "Wrong alignment on TsHotFixActionHandle_C_OnAxisInput");
static_assert(sizeof(TsHotFixActionHandle_C_OnAxisInput) == 0x000004, "Wrong size on TsHotFixActionHandle_C_OnAxisInput");
static_assert(offsetof(TsHotFixActionHandle_C_OnAxisInput, Value) == 0x000000, "Member 'TsHotFixActionHandle_C_OnAxisInput::Value' has a wrong offset!");

// Function TsHotFixActionHandle.TsHotFixActionHandle_C.ClearAxisBinding
// 0x0008 (0x0008 - 0x0000)
struct TsHotFixActionHandle_C_ClearAxisBinding final
{
public:
	class ABasePlayerController*                  Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsHotFixActionHandle_C_ClearAxisBinding) == 0x000008, "Wrong alignment on TsHotFixActionHandle_C_ClearAxisBinding");
static_assert(sizeof(TsHotFixActionHandle_C_ClearAxisBinding) == 0x000008, "Wrong size on TsHotFixActionHandle_C_ClearAxisBinding");
static_assert(offsetof(TsHotFixActionHandle_C_ClearAxisBinding, Controller) == 0x000000, "Member 'TsHotFixActionHandle_C_ClearAxisBinding::Controller' has a wrong offset!");

// Function TsHotFixActionHandle.TsHotFixActionHandle_C.AddAnyKeyPress
// 0x0040 (0x0040 - 0x0000)
struct TsHotFixActionHandle_C_AddAnyKeyPress final
{
public:
	class ABasePlayerController*                  Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputChord                            Chord;                                             // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FName                                   AnyKeyPressAction;                                 // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsHotFixActionHandle_C_AddAnyKeyPress) == 0x000008, "Wrong alignment on TsHotFixActionHandle_C_AddAnyKeyPress");
static_assert(sizeof(TsHotFixActionHandle_C_AddAnyKeyPress) == 0x000040, "Wrong size on TsHotFixActionHandle_C_AddAnyKeyPress");
static_assert(offsetof(TsHotFixActionHandle_C_AddAnyKeyPress, Controller) == 0x000000, "Member 'TsHotFixActionHandle_C_AddAnyKeyPress::Controller' has a wrong offset!");
static_assert(offsetof(TsHotFixActionHandle_C_AddAnyKeyPress, Chord) == 0x000008, "Member 'TsHotFixActionHandle_C_AddAnyKeyPress::Chord' has a wrong offset!");
static_assert(offsetof(TsHotFixActionHandle_C_AddAnyKeyPress, AnyKeyPressAction) == 0x000030, "Member 'TsHotFixActionHandle_C_AddAnyKeyPress::AnyKeyPressAction' has a wrong offset!");

// Function TsHotFixActionHandle.TsHotFixActionHandle_C.ClearKeyBinding
// 0x0008 (0x0008 - 0x0000)
struct TsHotFixActionHandle_C_ClearKeyBinding final
{
public:
	class ABasePlayerController*                  Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsHotFixActionHandle_C_ClearKeyBinding) == 0x000008, "Wrong alignment on TsHotFixActionHandle_C_ClearKeyBinding");
static_assert(sizeof(TsHotFixActionHandle_C_ClearKeyBinding) == 0x000008, "Wrong size on TsHotFixActionHandle_C_ClearKeyBinding");
static_assert(offsetof(TsHotFixActionHandle_C_ClearKeyBinding, Controller) == 0x000000, "Member 'TsHotFixActionHandle_C_ClearKeyBinding::Controller' has a wrong offset!");

// Function TsHotFixActionHandle.TsHotFixActionHandle_C.OnAnyKeyPressAction
// 0x0020 (0x0020 - 0x0000)
struct TsHotFixActionHandle_C_OnAnyKeyPressAction final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(TsHotFixActionHandle_C_OnAnyKeyPressAction) == 0x000008, "Wrong alignment on TsHotFixActionHandle_C_OnAnyKeyPressAction");
static_assert(sizeof(TsHotFixActionHandle_C_OnAnyKeyPressAction) == 0x000020, "Wrong size on TsHotFixActionHandle_C_OnAnyKeyPressAction");
static_assert(offsetof(TsHotFixActionHandle_C_OnAnyKeyPressAction, Key) == 0x000000, "Member 'TsHotFixActionHandle_C_OnAnyKeyPressAction::Key' has a wrong offset!");

}

